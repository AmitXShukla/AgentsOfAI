{"kind":"Article","sha256":"9c62081215ea9d275343215f949e6a6e71474aa7ce77fdca9286f775d3f816a3","slug":"messaging","location":"/content/messaging.md","dependencies":[],"frontmatter":{"title":"Direct Messages","content_includes_title":false,"github":"https://github.com/AmitXShukla/AgentsOfAI","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/AmitXShukla/AgentsOfAI/blob/main/content/messaging.md","exports":[{"format":"md","filename":"messaging.md","url":"/build/messaging-1bb0607c4a211c292c957f844cd27e0c.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"There are two types of communication in AutoGen core:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LY9I8RGKYy"}],"key":"Z0wJ7GoJLO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Direct Messaging: sends a direct message to another agent.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"zc6OuVbIep"}],"key":"CY6XrFG78E"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Broadcast: publishes a message to a topic.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LqhVWDPh02"}],"key":"PfX290OHqC"}],"key":"VEb6zF2Imx"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Let’s first look at direct messaging. To send a direct message to another agent, within a message handler use the AutoGen core.BaseAgent.send_message() method, from the runtime use the AutoGen _core.AgentRuntime.send_message() method. Awaiting calls to these methods will return the return value of the receiving agent’s message handler. When the receiving agent’s handler returns None, None will be returned.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"esUQ2HSgFq"}],"key":"GyeipOQnUu"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Note","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"RQXpK4Zama"}],"key":"bIGlwlD7S3"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"If the invoked agent raises an exception while the sender is awaiting, the exception will be propagated back to the sender.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"YILX4rPMC0"}],"key":"cOMIRBJvbx"},{"type":"heading","depth":2,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Request/Response","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"fRnsesbjZu"}],"identifier":"request-response","label":"Request/Response","html_id":"request-response","implicit":true,"key":"I1PHc4xij9"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Direct messaging can be used for request/response scenarios, where the sender expects a response from the receiver. The receiver can respond to the message by returning a value from its message handler. You can think of this as a function call between agents.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"tALm2eXH2d"}],"key":"GtDZVRgSev"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"For example, consider the following agents:","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"YO9JXa8QzI"}],"key":"d5bjBsl2XP"},{"type":"code","lang":"python","value":"from dataclasses import dataclass\n\nfrom autogen_core import MessageContext, RoutedAgent, SingleThreadedAgentRuntime, message_handler\n\n\n@dataclass\nclass Message:\n    content: str\n\n\nclass InnerAgent(RoutedAgent):\n    @message_handler\n    async def on_my_message(self, message: Message, ctx: MessageContext) -> Message:\n        return Message(content=f\"Hello from inner, {message.content}\")\n\n\nclass OuterAgent(RoutedAgent):\n    def __init__(self, description: str, inner_agent_type: str):\n        super().__init__(description)\n        self.inner_agent_id = AgentId(inner_agent_type, self.id.key)\n\n    @message_handler\n    async def on_my_message(self, message: Message, ctx: MessageContext) -> None:\n        print(f\"Received message: {message.content}\")\n        # Send a direct message to the inner agent and receives a response.\n        response = await self.send_message(Message(f\"Hello from outer, {message.content}\"), self.inner_agent_id)\n        print(f\"Received inner response: {response.content}\")","position":{"start":{"line":20,"column":1},"end":{"line":48,"column":1}},"key":"tlI434AWHP"},{"type":"paragraph","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"Upon receiving a message, the OuterAgent sends a direct message to the InnerAgent and receives a message in response.","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"GuhHW5pidh"}],"key":"xIHCd7hjtV"},{"type":"paragraph","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"children":[{"type":"text","value":"We can test these agents by sending a Message to the OuterAgent.","position":{"start":{"line":52,"column":1},"end":{"line":52,"column":1}},"key":"Id4bdXwKyf"}],"key":"XrynN1pVT5"},{"type":"code","lang":"python","value":"runtime = SingleThreadedAgentRuntime()\nawait InnerAgent.register(runtime, \"inner_agent\", lambda: InnerAgent(\"InnerAgent\"))\nawait OuterAgent.register(runtime, \"outer_agent\", lambda: OuterAgent(\"OuterAgent\", \"inner_agent\"))\nruntime.start()\nouter_agent_id = AgentId(\"outer_agent\", \"default\")\nawait runtime.send_message(Message(content=\"Hello, World!\"), outer_agent_id)\nawait runtime.stop_when_idle()","position":{"start":{"line":54,"column":1},"end":{"line":62,"column":1}},"key":"gVYVMuzP5H"},{"type":"admonition","kind":"seealso","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"result","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"PrulGgw3rs"}],"key":"L51J9K7M5W"},{"type":"code","lang":"","value":"Received message: Hello, World!\nReceived inner response: Hello from inner, Hello from outer, Hello, World!","position":{"start":{"line":65,"column":1},"end":{"line":66,"column":1}},"key":"pUp5gqrgn2"}],"key":"SWC13NpQNJ"},{"type":"paragraph","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"Both outputs are produced by the OuterAgent’s message handler, however the second output is based on the response from the InnerAgent.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"eUxCbLI4xg"}],"key":"mdBeZl58hH"},{"type":"paragraph","position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"text","value":"Generally speaking, direct messaging is appropriate for scenarios when the sender and recipient are tightly coupled – they are created together and the sender is linked to a specific instance of the recipient. For example, an agent executes tool calls by sending direct messages to an instance of ToolAgent, and uses the responses to form an action-observation loop.","position":{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},"key":"zXH946bNdZ"}],"key":"cf7L8R9Agj"}],"key":"G45WqFEjsY"}],"key":"MoRhmf8t0y"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Agent Lifecyle","url":"/lifecycle","group":"AutoGen Core"},"next":{"title":"Broadcasting","url":"/broadcast","group":"AutoGen Core"}}},"domain":"http://localhost:3006"}